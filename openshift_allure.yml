apiVersion: v1
kind: Template
message: "Login to allure"
metadata:
  annotations:
    description: The Allure OpenShift template
    tags: "instant-app,allure"
  name: allure
objects:
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: allure
      name: allure
    spec:
      ports:
        - name: allure
          port: 4040
          protocol: TCP
          targetPort: 4040
        - name: allure_api
          port: 5050
          protocol: TCP
          targetPort: 5050
      selector:
        app: allure
        deploymentconfig: allure
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: v1
    kind: Route
    metadata:
      annotations:
        description: Route for allure's http service.
      labels:
        app: allure
      name: allure
    spec:
      port:
        targetPort: allure
      tls:
        termination: edge
      to:
        kind: Service
        name: allure
  - apiVersion: v1
    kind: Route
    metadata:
      annotations:
        description: Route for allure's api service.
      labels:
        app: allure
      name: allure_api
    spec:
      port:
        targetPort: allure_api
      tls:
        termination: edge
      to:
        kind: Service
        name: allure_api
  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        app: allure
      name: allure
    spec:
      tags:
        - annotations:
            description: The allure Docker image
            tags: allure
          from:
            kind: DockerImage
            name: "rstens/allure:latest"
          importPolicy: {}
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: allure
        deploymentconfig: allure
      name: allure
    spec:
      replicas: 1
      selector:
        app: allure
        deploymentconfig: allure
      strategy:
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          annotations:
            openshift.io/container.allure.image.entrypoint: '["./app/run.sh"]'
          creationTimestamp: null
          labels:
            app: allure
            deploymentconfig: allure
        spec:
          containers:
            - env:
                volumeMounts:
                  - mountPath: /app/allure-results
                    name: allure-data
                    subPath: allure-results
              image: " "
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /
                  port: 4040
                initialDelaySeconds: 60
                periodSeconds: 20
                successThreshold: 1
                timeoutSeconds: 5
              name: allure
              ports:
                - containerPort: 4040
                  protocol: TCP
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /
                  port: 4040
                initialDelaySeconds: 60
                periodSeconds: 20
                successThreshold: 1
                timeoutSeconds: 5
              resources:
                limits:
                  cpu: 1
                  memory: 2Gi
                requests:
                  cpu: 125m
                  memory: 2Gi
              terminationMessagePath: /app/termination-log
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - emptyDir: {}
              name: ALLURE-data
              persistentVolumeClaim:
                claimName: allure-data
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - allure
            from:
              kind: ImageStreamTag
              name: "allure:latest"
          type: ImageChange
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        app: allure
      name: allure-data
    spec:
      accessModes:
        - ReadWriteOnce
      storageClassName: ${ALLURE_PERSISTENT_VOLUME_CLASS}
      resources:
        requests:
          storage: "${ALLURE_VOLUME_CAPACITY}"
parameters:
  - displayName: allure version
    name: ALLURE_VERSION
    required: true
    value: "latest"
  - description: Volume space available for allure
    displayName: allure Volume Capacity
    name: ALLURE_VOLUME_CAPACITY
    required: true
    value: 5Gi
  - name: ALLURE_PERSISTENT_VOLUME_CLASS
    displayName: Persistent Volume Class name
    description: The class of the volume; netapp-file-standard
    required: false
    value: netapp-file-standard
